import React, {
  useState
} from 'react';
import PropTypes from 'prop-types';
import Swiper from 'react-id-swiper';
import { useInView } from 'react-intersection-observer';
import { NavLink } from 'react-router-dom';
import Frame from 'components/Frame/Frame';
import LinkLoader from 'components/LinkLoader/LinkLoader';

/**
 * Home Page Featured Component
 *
 * @name PageHomeSkills
 * @param {array} props.featuredWork - Featured Projects
 * @return {JSXElement}
 */
const PageHomeFeatured = ({
  featuredWork
}) => {
  /**
   * React State mutator for setting the swiper instance
   *
   * @type {[object, function]}
   */
  const [swiper, updateSwiper] = useState(null);

  /**
   * Params for the Swiper component
   *
   * @type {Object}
   */
  const params = {
    preloadImages: false,
    lazyLoading: true,
    updateOnImagesReady: true,
    slidesPerView: 1,
    spaceBetween: 10,
    loop: false,
    autoHeight: true,
    breakpoints: {
      481: {
        slidesPerView: 2,
        spaceBetween: 30
      },
      768: {
        slidesPerView: 3,
        spaceBetween: 50
      },
    }
  };

  /**
   * Go to the next slide
   *
   * @name goNext
   * @type {function}
   */
  const goNext = () => {
    if (swiper !== null) {
      swiper.slideNext();
    }
  };

  /**
   * Go to the previous slide
   *
   * @name goPrev
   * @type {function}
   */
  const goPrev = () => {
    if (swiper !== null) {
      swiper.slidePrev();
    }
  };

  /**
   * Hook that is generated by the useInView function from the
   * react-intersection-observer library.
   *
   * @type {[object, function]}
   */
  const [sliderNavRef, inView] = useInView({
    threshold: 1,
    rootMargin: '-150px'
  });

  return (
    <section className="PageHomeFeatured Page__section Page__section--greyFade">
      <div className="Page__sectionInner grid">
        <div className="Page__headingWrap">
          <h2>Featured Work</h2>
          <NavLink
            to="/portfolio"
            className="link--withHeading link--withIcon"
          >
            View All Work
          </NavLink>
        </div>
        <Swiper
          getSwiper={ updateSwiper }
          { ...params }
        >
          { featuredWork.map((project) => {
            const {
              id,
              slug,
              featuredImage,
              title,
              isNew
            } = project;
            return (
              <div className="PageHomeFeatured__slide" key={ id }>
                <LinkLoader
                  type="portfolio"
                  slug={ slug }
                >
                  <Frame
                    featuredImage={ featuredImage }
                    title={ title }
                    isNew={ isNew }
                    size="Medium"
                  />
                </LinkLoader>
              </div>
            );
          })}
        </Swiper>
      </div>
      <div
        ref={ sliderNavRef }
        className={ `Slider__directionNav${inView ? ' Slider__directionNav--active' : ''}` }
      >
        <button
          type="button"
          onClick={ goPrev }
          className="Slider__prev"
        >
          Previous
        </button>
        <button
          type="button"
          onClick={ goNext }
          className="Slider__next"
        >
          Next
        </button>
      </div>
    </section>
  );
};

PageHomeFeatured.propTypes = {
  featuredWork: PropTypes.array
};

export default PageHomeFeatured;
